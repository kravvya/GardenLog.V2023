@inject ILogger<PlantGrowInstructionList> _logger;
@inject IVerifyService _verifyService;
@inject IPlantService _plantService;
@inject NavigationManager _navigationManager;

<article id="plantGrowInstructionList">
    <div class="container">
        <div class="row">
            @if (GrowInstructions == null)
            {
                <p><em>Empty</em></p>
            }
            else
            {
                <div class="accordion" id="growInstructions">
                    @foreach (var grow in GrowInstructions.OrderBy(c => c.Name).Select((value, index) => new {value, index}))
                    {
                        <PlantGrowInstructionAccordianItemView GrowInstruction=@grow.value  IsOpen=@IsOpen(grow.index) />
                    }
                </div>
            }
        </div>

    </div>
</article>
@code {

    [Parameter] public PlantModel Plant { get; set; }

    private IList<PlantGrowInstructionViewModel> GrowInstructions { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GrowInstructions = await _plantService.GetPlantGrowInstructions(Plant.PlantId, true);
        StateHasChanged();
    }

    private bool IsOpen(int index)
    {
        return index == 0;
    }
}
