@page "/addplantgrow/{PlantId}"
@page "/editplantgrow/{PlantId}/grow/{PlantGrowInstructionId}"

@inject ILogger<PlantVarietyFormPage> _logger
@inject IPlantService _plantService
@inject NavigationManager _navigationManager

<Page Title="@title" Description="@description" BreadcrumbLinks="@breacrumbLinks">
    <PageContent>
        <PlantGrowInstructionForm OnClose=@ClosePage @ref="plantGrowInstructionForm" />
    </PageContent>
</Page>

@code {
    [Parameter] public string PlantId { get; set; }
    [Parameter] public string PlantGrowInstructionId { get; set; }

    private List<BreadcrumbLink> breacrumbLinks = new();

    private PlantModel plant { get; set; }
    private PlantGrowInstructionViewModel plantGrowInstruction { get; set; }
    private PlantGrowInstructionForm plantGrowInstructionForm { get; set; }

    private string title { get; set; }
    private string description { get; set; }


    protected override async Task OnInitializedAsync()
    {
        plant = await GetPlant(PlantId);

        if (plant == null)
        {
            NavigateToPlants();
            return;
        }

        breacrumbLinks.Add(new BreadcrumbLink("Plants", _navigationManager.GetPlantsUrl(), false));
        breacrumbLinks.Add(new BreadcrumbLink(plant.Name, _navigationManager.GetViewPlantUrl(PlantId), false));

        if (string.IsNullOrWhiteSpace(PlantGrowInstructionId))
        {
            breacrumbLinks.Add(new BreadcrumbLink($"Add {plant.Name} Grow Instruction", _navigationManager.GetCreatePlantGrowInstructionUrl(PlantId), true));
            title = $"Add {plant.Name} Grow Instruction";
            description = "";// $"Add {plant.Name} Variety";
            plantGrowInstructionForm.Initialize(null, plant);
        }
        else
        {
            plantGrowInstruction = await GetPlantGrowInstruction(PlantId, PlantGrowInstructionId);
            breacrumbLinks.Add(new BreadcrumbLink($"Edit {plantGrowInstruction.Name}", _navigationManager.GetEditPlantGrowInstructionUrl(PlantId, PlantGrowInstructionId), true));
            title = $"Edit {plantGrowInstruction.Name}";
            description = "";// $"Add {plant.Name} Variety";
            plantGrowInstructionForm.Initialize(plantGrowInstruction, plant);
        }

        StateHasChanged();
    }

    private async Task<PlantModel> GetPlant(string plantId)
    {
        PlantModel plant = null;

        if (!string.IsNullOrWhiteSpace(plantId))
        {
            plant = await _plantService.GetPlant(plantId, false);
        }
        return plant;
    }

    private async Task<PlantGrowInstructionViewModel> GetPlantGrowInstruction(string plantId, string plantGrowInstructionId)
    {
        PlantGrowInstructionViewModel growInstruction = null;

        growInstruction = await _plantService.GetPlantGrowInstruction(plantId, plantGrowInstructionId);

        return growInstruction;
    }

    protected async Task ClosePage()
    {
        await Task.Delay(1);
        _navigationManager.NavigateToViewPlant(PlantId);

    }

    protected void NavigateToPlants()
    {
        _navigationManager.NavigateToPlants();

    }
}
