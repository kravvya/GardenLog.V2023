@page "/viewplant/{PlantId}"

@inject IPlantService _plantService;
@inject NavigationManager _navigationManager;
@inject IImageService _imageService;
@inject IVerifyService _verifyService;

@if (Plant != null)
{
    <Page Title="@Title" Description="@Description" BreadcrumbLinks="@breadcrubLinks">
        <PageContent>
            <article id="plantView">
                <div class="row">
                    <div class="col-12 col-lg-4 mb-lg-5">
                        <div id="image-container">
                            <div class="plant-image">
                                <img class="d-block img-fluid" src="@_imageService.GetRawImageUrl(Plant.ImageFileName)" alt="@Plant.ImageLabel" />
                            </div>
                            <div class="plant-image-thumbnail">
                                @foreach (var image in Plant.Images)
                                {
                                    <img class="img-fluid img-thumbnail" @key="image.ImageId" src="@_imageService.GetThumbnailImageUrl(image.FileName)" alt="@image.Label" @onclick="@(() => ReplaceImage(image))" />
                                }
                            </div>
                        </div>

                        <div id="quick-facts">
                            <div class="plant-facts">
                                <h3 class="plant-facts_heading">Quick Facts</h3>
                                <dl class="plant-facts_list row mt-2 mt-lg-0">
                                    <div class="plant-facts-item mt-1">
                                        <dt class="plant-facts_term">Features</dt>
                                        <dd class="plant-facts_definition col">
                                              <img src="./images/@(Plant.LightRequirement).png" alt="@(_verifyService.GetDescription(@Plant.LightRequirement))" title="@(_verifyService.GetDescription(@Plant.LightRequirement))" class="img-fluid" />
                                              <img src="./images/@(Plant.Type).png" alt="@Plant.Type" title="@Plant.Type" class="img-fluid" />
                                              <img src="./images/@(Plant.Lifecycle).png" alt="@Plant.Lifecycle" title="@Plant.Lifecycle" class="img-fluid">
                                        </dd>
                                    </div>
                                    @if (Plant.HarvestSeason != HarvestSeasonEnum.Unspecified)
                                    {
                                        <div class="plant-facts-item mt-1">
                                            <dt class="plant-facts_term">Harvest</dt>
                                            <dd class="plant-facts_definition col">@GetHarvestSeasons()</dd>
                                        </div>
                                    }
                                    <div class="plant-facts-item mt-1">
                                        <dt class="plant-facts_term">Seed Viability (yrs)</dt>
                                        <dd class="plant-facts_definition col">@Plant.SeedViableForYears</dd>
                                    </div>
                                </dl>
                            </div>
                        </div>                      

                      
                    </div>

                    <div class="col-12 col-lg-8">

                        <div id="description">
                            <p>
                                @Plant.Description
                            </p>
                        </div>
                                               
                        <div id="varieties-container">
                            <p>
                                <PlantVarietyList Plant=@Plant />
                            </p>
                        </div>

                            <div id="grow-instructions-container">
                            <div class="plant-grow">
                                <h3 class="plant-facts_heading">Growing Instructions</h3>
                                    <p>
                                    <PlantGrowInstructionList Plant=@Plant />
                                </p>
                            </div>
                        </div>   
                    </div>
                </div>
                  <PlantViewFooter Plant=@Plant Close=@ClosePage />
                
            </article>
        </PageContent>
    </Page>
}

@code {
    [Parameter]
    public string PlantId { get; set; }

    private PlantModel Plant { get; set; }
    private string Title { get; set; }
    private string Description { get; set; }
    private List<BreadcrumbLink> breadcrubLinks = new();

    protected override async Task OnInitializedAsync()
    {
        breadcrubLinks.Add(new BreadcrumbLink("Plants", _navigationManager.GetPlantsUrl(), false));

        Plant = await _plantService.GetPlant(PlantId, true);

        if (Plant == null)
        {
            ClosePage();
        }

        breadcrubLinks.Add(new BreadcrumbLink(Plant.Name, _navigationManager.GetViewPlantUrl(Plant.PlantId), true));

        Title = $"{Plant.Name}";
        Description = $"{Plant.Name} Details";

    }

    private void ReplaceImage(ImageViewModel newImage)
    {
        Plant.ImageFileName = newImage.FileName;
        Plant.ImageLabel = newImage.Label;
        StateHasChanged();
    }

    private string GetHarvestSeasons()
    {
        System.Text.StringBuilder sb = new();

        foreach (HarvestSeasonEnum harvest in Enum.GetValues(typeof(HarvestSeasonEnum)))
        {
            if (Plant.HarvestSeason.HasFlag(harvest) && harvest != HarvestSeasonEnum.Unspecified)
            {
                if (sb.Length > 0) { sb.Append(", "); }
                sb.Append(_verifyService.GetDescription<HarvestSeasonEnum>(harvest.ToString()));
            }
        }
        return sb.ToString();
    }

    protected void ClosePage()
    {
        _navigationManager.NavigateToPlants();

    }

}
